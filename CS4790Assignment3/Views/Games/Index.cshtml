@model PaginatedList<CS4790Assignment3.Models.Game>
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewData["Title"] = "Index";
}

<div class="row">
	<div class="col-lg-4">
		@{
			var IsValidated = ViewData["IsValidated"];
			if (IsValidated != null)
			{
				var Role = (string)ViewData["Role"];
				if (Role == "Administrator")
				{
					<div class="btn"><a asp-action="Create">Add Game</a></div>
				}
			}
		}

		<div class="btn" style="visibility: @ViewData["DefaultFilterVisibility"]">
			<a asp-action="Index">Default Sort</a>
		</div>
	</div>
	<div class="col-lg-6"></div>
</div>

<table class="table table-hover">
	<thead>
		<tr>
			<th>
				Game ID
			</th>
			<th>
				Status
			</th>
			<th>
				<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSort"]" asp-route-currentFilter="@ViewData["currentFilter"]">Game Name</a>
			</th>
			<th>
				Genre
			</th>
			<th>
				Price
			</th>
			<th>
				Online Multiplayer Capabilities
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var entry in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(g => entry.GameID)
				</td>
				<td>
					@{
						if (entry.AlreadyOwned == true)
						{
							<p><b>Owned</b></p>
						}
						else
						{
							<p>Not owned</p>
						}
					}
				</td>
				<td>
					<a asp-action="Details" asp-route-id="@entry.GameID" alt="Click to edit entry.">
						@Html.DisplayFor(g => entry.Name)
					</a>
				</td>
				<td>
					@Html.DisplayFor(g => entry.Genre)
				</td>
				<td>
					@Html.DisplayFor(g => entry.Price)
				</td>
				<td>
					@{
						if (entry.IsOnlineMultiplayer == true)
						{
							<p>Online Multiplayer Available</p>
						}
						else
						{
							<p>Offline Singleplayer Only</p>
						}
					}
				</td>
			</tr>
						}
	</tbody>
</table>

<div class="row text-center">
	<br />
	@{
		var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.HasNextPage ? "disabled" : "";

		<a asp-action="Index"
		   asp-route-sortOrder="@ViewData["CurrentSort"]"
		   asp-route-page="@(Model.PageIndex - 1)"
		   asp-route-currentFilter="@ViewData["CurrentFilter"]"
		   class="btn @prevDisabled">
			Previous
		</a>

		<a asp-action="Index"
		   asp-route-sortOrder="@ViewData["CurrentSort"]"
		   asp-route-page="@(Model.PageIndex + 1)"
		   asp-route-currentFilter="@ViewData["CurrentFilter"]"
		   class="btn @nextDisabled">
			Next
		</a>

	}
</div>